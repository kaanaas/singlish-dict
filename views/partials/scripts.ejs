<script>
    const form = document.getElementById("search-form");
    const button = document.getElementById("search-button");
    const searchBar = document.getElementById("search-input");
    const whack = document.getElementById("anyhow-whack");
    const result = document.getElementById("result");
    const alts = document.getElementById("alts");
    const altsFlex = document.getElementById("alts-flex");
    const detailDiv = document.getElementById("details");
    

    /* functions */
    // search bar character limiting
    searchBar.addEventListener("input", () => {
        let searchInput = document.getElementById("search-input").value;
        if(/[^a-zA-Z0-9 ,'\-$&]/.test(searchInput)){
            alert("Only alphanumeric characters, spaces, hyphens, apostrophes, and certain limited special characters are allowed.");
            searchBar.value = searchInput.replace(/[^a-zA-Z0-9 ,'\-$&]/g, '');
        }
    });

    whack.addEventListener("click", () => {
        fetch("dict/dict.json")
            .then((response) => response.json())
            .then((data) => {
                var keys = Object.keys(data);
                var randWord = keys[keys.length * Math.random() << 0];
                // console.log(randWord);
                window.location.href = `./?q=${randWord}`;
            });
    });

    // 4fun header alts
    const altsLeader = document.getElementById("alts-leader");
    if(altsLeader){
        altsLeader.addEventListener("click", () => {
            if(altsLeader.innerHTML != "also can:"){
                altsLeader.innerHTML = "also can:";
            }
            else{
                altsLeader.innerHTML = "alternatives:";
            }
        });
    }

    const definitionsLeaders = document.getElementsByName("definitions-leader");
    if(definitionsLeaders){
        definitionsLeaders.forEach((definitionsLeader) => {
            definitionsLeader.addEventListener("click", () => {
                if(definitionsLeader.innerHTML != "means what:"){
                    definitionsLeader.innerHTML = "means what:";
                }
                else{
                    definitionsLeader.innerHTML = "definitions:";
                }
            })
        });
    }

    const synLeaders = document.getElementsByName("synonyms-leader");
    if(synLeaders) {   
        synLeaders.forEach((synLeader) => {
            synLeader.addEventListener("click", () => {
                if(synLeader.innerHTML != "same same:"){
                    synLeader.innerHTML = "same same:";
                }
                else{
                    synLeader.innerHTML = "synonyms:";
                }
            });
        });
    };

    const antLeaders = document.getElementsByName("antonyms-leader");
    if(antLeaders){      
        antLeaders.forEach((antLeader) => {
            antLeader.addEventListener("click", () => {
                if(antLeader.innerHTML != "but different:"){
                    antLeader.innerHTML = "but different:";
                }
                else{
                    antLeader.innerHTML = "antonyms:";
                }
            });
        });
    };

    const refLeaders = document.getElementsByName("refs-leader");
    if(refLeaders){      
        refLeaders.forEach((leader) => {
            leader.addEventListener("click", () => {
                if(leader.innerHTML != "references:"){
                    leader.innerHTML = "references:";
                }
                else{
                    leader.innerHTML = "who confirm?";
                }
            });
        });
    };
        
</script>